# Multi-stage build for production
FROM node:18-alpine as build

WORKDIR /app

ARG REACT_APP_API_BASE_URL

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production --silent

# Copy source code
COPY . .

# Expose API base URL to build (Create React App reads REACT_APP_* at build time)
ENV REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}

# Build the app
RUN echo "Building with REACT_APP_API_BASE_URL=$REACT_APP_API_BASE_URL" && npm run build

# Production stage with nginx
FROM nginx:1.25-alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Copy built app from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.prod.conf /etc/nginx/conf.d/default.conf

# Copy custom nginx.conf for optimizations (if it exists)
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Run as the pre-existing non-root nginx user (avoids needing to recreate it)
USER nginx

# Start nginx
CMD ["nginx", "-g", "daemon off;"]