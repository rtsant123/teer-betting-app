version: '3.8'

services:
  # PostgreSQL Database (Optimized for 2GB RAM)
  db:
    image: postgres:15-alpine
    container_name: teer_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-teer_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
      POSTGRES_DB: ${POSTGRES_DB:-teer_betting}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: >
      postgres 
      -c max_connections=20
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c work_mem=4MB
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-teer_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Lightweight)
  redis:
    image: redis:7-alpine
    container_name: teer_redis
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Single Worker)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: teer_backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-teer_user}:${POSTGRES_PASSWORD:-change_this_password}@db:5432/${POSTGRES_DB:-teer_betting}
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your_secret_key_change_this}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Nginx Static)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8000}
    container_name: teer_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 64M

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: teer_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@teer.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    name: teer_network
