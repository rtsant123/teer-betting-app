version: '3.8'

services:
  # Test Database
  db-test:
    image: postgres:15-alpine
    container_name: teer_db_test
    environment:
      POSTGRES_DB: teer_betting_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Backend for testing
  backend-test:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: teer_backend_test
    environment:
      - DATABASE_URL=postgresql://postgres:password@db-test:5432/teer_betting_test
      - SECRET_KEY=test-secret-key-for-testing-only
      - DEBUG=True
      - TESTING=True
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend-test:80
    volumes:
      - ./backend:/app
      - test_uploads:/app/uploads
    ports:
      - "8002:8000"
    depends_on:
      db-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Frontend for testing
  frontend-test:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: teer_frontend_test
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8002/api/v1
      - NODE_ENV=test
    ports:
      - "3001:80"
    depends_on:
      - backend-test

  # Redis for testing
  redis-test:
    image: redis:7-alpine
    container_name: teer_redis_test
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes

volumes:
  postgres_test_data:
  test_uploads:

networks:
  default:
    name: teer_test_network
